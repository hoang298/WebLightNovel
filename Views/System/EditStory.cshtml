@model WebLightNovel.Models.Entity.Story

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_LayoutSystem.cshtml";
}


@using (Html.BeginForm("EditStory", "System", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Story</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.story_id)

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.author_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.author_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.author_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.artist_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.artist_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.artist_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Ảnh minh họa</label>
            <div class="col-md-10">
                <img style="width:200px;height:300px" src="~/Content/imageIllustration/@Model.cover_image" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Chọn ảnh</label>
            <div class="col-md-10">
                <input type="file" name="file" value="" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.synopsis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.synopsis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.synopsis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.translation_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.translation_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.translation_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div id="toast"></div>
<script src="~/Scripts/Toast/Toast.js"></script>
@if (TempData["EditStory"] != null)
{
    <script>
        function showSuccessToast() {
            toast({
                title: "Thành công!",
                message: "Bạn đã sửa truyện thành công.",
                type: "success",
                duration: 5000
            });
        }

        showSuccessToast();
    </script>
}
@if (TempData["ErrorEditStory"] != null)
{
    <script>
        function showErrorToast() {
            toast({
                title: "Thất bại!",
                message: "Thao tác thất bại vui lòng thử lại",
                type: "error",
                duration: 5000
            });
        }
            showErrorToast();
    </script>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
